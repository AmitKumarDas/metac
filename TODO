### TODO:
- Test metac with changes to rbac 
- Add integration tests w.r.t GenericController:
    - check if same watch can update an attachment via multiple gctl specs
    - send specific parts of attachments:
        - send - []string{Name, MetaData, Labels, Annotations, Spec, Status} 
        - default sends everything
    - special annotation & label expressions:
        - operator - WatchIsOwner, WatchIsCreator, WatchIsUpdater
        - operator - WatchInKey, WatchInValue, ValueContainsWatch, KeyContainsWatch

### Blogs:
- Integration Tests
    - go based integration tests vs. bash based vs GCtl based
    - Blog talks only about GCtl tests & give links to how Go & Bash are done

### Learn:
- read & review & compare them against GenericController
    - ht   tps://github.com/GoogleCloudPlatform/metacontroller/issues/98
    - https://github.com/GoogleCloudPlatform/metacontroller/pull/143
    - https://github.com/GoogleCloudPlatform/metacontroller/pull/168

### Few targeted usecases:
  - K8s ConformanceTest Controllers
  - K8s Controllers
  - K8s Debug Controllers
  - K8s Monitoring Controllers
  - Install
  - UnInstall
  - Upgrade

### Future actions:
- All controller enhancements
  - https://github.com/GoogleCloudPlatform/metacontroller/issues/154
  - make Metac run based on either of following: 
      - CustomResource, or # current mode
      - Config # default mode
  - make cctl, dctl & gctl work from config files vs. current way that depends on CRDs
- Use latest stable Kubernetes version & etcd for integration testing
- restructure examples to enable community
- code to use klog
- >>enisoc 2:08 AM
    if the new client-go dynamic informer does everything metacontroller needs 
    (e.g. start/stop dynamically without process restart), it would be great to
    rebase metacontroller on client-go's dynamic package

### Meeting Notes & Agenda
- https://docs.google.com/document/d/1HV_Fr0wIW9tr5OZwK_6oGux_OhcGtxxWWV6dCYJR9Cw/


### Updated TODO List With Priority
- Skip Reconcile support - DONE
- Skip Reconcile example - ?
- Advanced Selector support - 1
    - study existing implementation; push more code comments
    - study existing unit tests; push more code comments
    - look again at the names of key, operator, etc;
    - implement the required stuff
- Local config based examples - 3
- Local config based integration tests - 2
    - Split manifests
    - Design a separate suite_test.go for local config based tests
- Send specific parts of attachments - ?
    - e.g. namespace & name, metadata only, status only, metadata + spec, labels only, annotations only, 
    - examples - ?
    - integration tests - ?
- Simplify Integration Tests - ?
    - refer to apiserver-extensions project
- Inline Hook Calls - 4
- Inline Hook Call Integration Tests - 5